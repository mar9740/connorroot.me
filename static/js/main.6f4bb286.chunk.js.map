{"version":3,"sources":["Components/CustomHeader.js","Pages/HomePage.js","Pages/About.js","Pages/Baseball.js","App.js","serviceWorker.js","index.js"],"names":["menuLinks","name","link","menuIcons","icon","href","PageHeader","pathname","this","props","location","react_default","a","createElement","className","Header","as","Menu","secondary","map","it","Item","key","active","Link","to","position","Icon","size","target","Component","withRouter","HomePage","Container","fluid","About","Baseball","App","BrowserRouter","Components_CustomHeader","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gVAMMA,UAAY,CAChB,CACEC,KAAM,OACNC,KAAM,KAER,CACCD,KAAM,WACNC,KAAM,aAEP,CACED,KAAM,QACNC,KAAM,YAKJC,EAAY,CAChB,CACEC,KAAM,UACNC,KAAM,uBAER,CACED,KAAM,WACNC,KAAM,6BAKJC,mLACK,IACCC,EAAaC,KAAKC,MAAMC,SAAxBH,SACR,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,GAAG,MAAX,eACAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,WAAS,GAEXlB,EAAUmB,IAAI,SAAAC,GAAE,OACdT,EAAAC,EAAAC,cAACI,EAAA,EAAKI,KAAN,CACEpB,KAAMmB,EAAGnB,KACTqB,IAAKF,EAAGnB,KACRsB,OAAQH,EAAGlB,OAASK,EACpBS,GAAIQ,IACJC,GAAIL,EAAGlB,SAIbS,EAAAC,EAAAC,cAACI,EAAA,EAAKA,KAAN,CAAWS,SAAS,SAEhBvB,EAAUgB,IAAI,SAAAC,GAAE,OACdT,EAAAC,EAAAC,cAACI,EAAA,EAAKI,KAAN,CACEC,IAAKF,EAAGhB,KACRA,KAAMO,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAM1B,KAAMmB,EAAGhB,KAAMwB,KAAK,QAChCvB,KAAMe,EAAGf,KACTwB,OAAO,uBAzBAC,aAoCVC,cAAWzB,GC7CX0B,mLApBb,OACCrB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAWC,OAAK,GACfvB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,GAAG,MAAX,aACAL,EAAAC,EAAAC,cAAA,qHAIAF,EAAAC,EAAAC,cAAA,8BAGAF,EAAAC,EAAAC,cAAA,iCAbkBiB,aCqBRK,mLAnBb,OACCxB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAWC,OAAK,GACfvB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,GAAG,MAAX,YACAL,EAAAC,EAAAC,cAAA,iQAMAF,EAAAC,EAAAC,cAAA,sFAZeiB,aCkBLM,mLAhBb,OACCzB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAWC,OAAK,GACfvB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,GAAG,MAAX,iBACAL,EAAAC,EAAAC,cAAA,qBAGAF,EAAAC,EAAAC,cAAA,sFATkBiB,aCwBRO,mLAhBX,OACE1B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACEtB,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0B,EAAD,MACE5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWX,IACjCrB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWR,IACtCxB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWP,eAVvCN,aCGEc,QACW,cAA7BC,OAAOnC,SAASoC,UAEe,UAA7BD,OAAOnC,SAASoC,UAEhBD,OAAOnC,SAASoC,SAASC,MACvB,kECVNC,IAASC,OAAOtC,EAAAC,EAAAC,cAACqC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6f4bb286.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Header, Icon, Menu } from 'semantic-ui-react'\nimport { Link, withRouter }  from 'react-router-dom'\nimport './CustomHeader.css'\n\n\nconst menuLinks = [\n  {\n    name: 'home',\n    link: '/'\n  },\n  {\n  \tname: 'baseball',\n  \tlink: '/baseball'\n  },\n  {\n    name: 'about',\n    link: '/about'\n  },\n  \n]\n\nconst menuIcons = [\n  {\n    icon: 'youtube',\n    href: 'https://youtube.com'\n  },\n  {\n    icon: 'linkedin',\n    href: 'https://www.linkedin.com'\n  },\n  \n]\n\nclass PageHeader extends Component {\n  render() {\n    const { pathname } = this.props.location\n    return (\n      <div className='PageHeader'>\n        <Header as='h1'>Connor Root</Header>\n        <Menu secondary>\n          {\n            menuLinks.map(it => (\n              <Menu.Item \n                name={it.name}\n                key={it.name}\n                active={it.link === pathname}\n                as={Link} \n                to={it.link}\n              />\n            ))\n          }\n          <Menu.Menu position='right'>\n            {\n              menuIcons.map(it => (\n                <Menu.Item\n                  key={it.icon}\n                  icon={<Icon name={it.icon} size='big'/>}\n                  href={it.href}\n                  target='_blank'\n                />\n              ))\n            }\n          </Menu.Menu>\n        </Menu>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(PageHeader)","import React, { Component } from 'react';\nimport { Container, Header } from 'semantic-ui-react';\n\nclass HomePage extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Container fluid>\n\t\t\t\t\t<Header as='h2'>Home Page</Header>\n\t\t\t\t\t<p>\n\t\t\t\t\tWelcome! This is my personal website to display all my accomplishments and info to the\n\t\t\t\t\tgeneral populace.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\tFiller stuff here\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\tExtra break\n\t\t\t\t\t</p>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default HomePage;","import React, { Component } from 'react';\nimport { Container, Header } from 'semantic-ui-react';\n\nclass About extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Container fluid>\n\t\t\t\t\t<Header as='h2'>About Me</Header>\n\t\t\t\t\t<p>\n\t\t\t\t\tsomething goes here, i just really don't feel like typing out a crap\n\t\t\t\t\tload so I am just going to make a run on sentence that I can type for \n\t\t\t\t\ta minute or so and have it drag out a few lines on sublime text for the\n\t\t\t\t\tsake of seeing it on the webpage.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\tAlso another thing here just to see how the fluid breaks another\n\t\t\t\t\t</p>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { Container, Header } from 'semantic-ui-react';\n\nclass Baseball extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Container fluid>\n\t\t\t\t\t<Header as='h2'>Baseball Info</Header>\n\t\t\t\t\t<p>\n\t\t\t\t\tBaseball\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\tAlso another thing here just to see how the fluid breaks another\n\t\t\t\t\t</p>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Baseball;","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport CustomHeader from './Components/CustomHeader';\nimport HomePage from './Pages/HomePage';\nimport About from './Pages/About';\nimport Baseball from './Pages/Baseball';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <Router>\n            <div>\n              <CustomHeader/>\n                <Route exact path='/' component={HomePage}/>\n                <Route exact path='/about' component={About}/>\n                <Route exact path='/baseball' component={Baseball}/>\n            </div>\n          </Router>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}